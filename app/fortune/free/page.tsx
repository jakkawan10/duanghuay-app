'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { onAuthStateChanged } from 'firebase/auth';
import { auth } from '@/lib/firebase';

const FreePage = () => {
  const router = useRouter();
  const [loading, setLoading] = useState(true);
  const [user, setUser] = useState<any>(null);
  const [birthDate, setBirthDate] = useState('');
  const [result, setResult] = useState('');

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      if (!currentUser) {
        router.push('/login');
      } else {
        setUser(currentUser);
      }
      setLoading(false);
    });
    return () => unsubscribe();
  }, []);

  const handleSubmit = () => {
    if (!birthDate) {
      setResult('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    // Mock ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    const predictions = [
      '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏´‡πà‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà ‡∏≠‡∏¢‡πà‡∏≤‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡∏´‡∏•‡∏∏‡∏î‡∏°‡∏∑‡∏≠',
      '‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏ö‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ö‡∏ö‡∏•‡∏±‡∏ö‡πÜ',
      '‡πÇ‡∏ä‡∏Ñ‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤ ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏´‡∏¢‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡∏õ‡∏∏‡∏Å',
      '‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÅ‡∏¢‡πà ‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏î‡∏µ‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏ä‡πâ‡∏≤',
      '‡∏≠‡∏î‡∏ó‡∏ô‡∏≠‡∏µ‡∏Å‡∏ô‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß'
    ];
    const random = predictions[Math.floor(Math.random() * predictions.length)];
    setResult(`üîÆ ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${birthDate}:\n${random}`);
  };

  if (loading) return <div className="text-center p-10">Loading...</div>;

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-white to-purple-100 px-4">
      <h1 className="text-2xl font-bold mb-4">üîÆ ‡πÄ‡∏ö‡∏¥‡∏Å‡∏ç‡∏≤‡∏ì‡πÅ‡∏ö‡∏ö Free</h1>

      <input
        type="text"
        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î ‡πÄ‡∏ä‡πà‡∏ô 1/1/1990"
        value={birthDate}
        onChange={(e) => setBirthDate(e.target.value)}
        className="w-full max-w-md p-3 rounded border border-gray-300 mb-4 text-center"
      />

      <button
        onClick={handleSubmit}
        className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600"
      >
        ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
      </button>

      {result && (
        <div className="mt-6 max-w-md bg-white border p-4 rounded shadow whitespace-pre-line text-center">
          {result}
        </div>
      )}
    </div>
  );
};

export default FreePage;
