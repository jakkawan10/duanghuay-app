'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { db } from '@/lib/firebase';
import { doc, getDoc, setDoc } from 'firebase/firestore';
import { useAuth } from '../../lib/hooks/useAuth';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';

const gods = [
  { id: 'sroiboon', name: '‡πÄ‡∏à‡πâ‡∏≤‡πÅ‡∏°‡πà‡∏™‡∏£‡πâ‡∏≠‡∏¢‡∏ö‡∏∏‡∏ç', color: 'bg-pink-200' },
  { id: 'intra', name: '‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏á‡∏Ñ‡πå‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡πå‡πÅ‡∏™‡∏ô‡∏î‡∏µ', color: 'bg-blue-200' },
  { id: 'maneewitch', name: '‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏ì‡∏µ‡πÄ‡∏ß‡∏ó‡∏¢‡∏°‡∏ô‡∏ï‡πå', color: 'bg-yellow-200' },
  { id: 'dandok', name: '‡πÄ‡∏à‡πâ‡∏≤‡πÅ‡∏°‡πà‡∏î‡∏≤‡∏ô‡∏î‡∏≠‡∏Å‡∏©‡πå‡∏®‡πå', color: 'bg-green-200' },
  { id: 'ai-god', name: '‡πÄ‡∏ó‡∏û AI ‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î‡∏™‡∏∏‡∏î‡∏•‡πâ‡∏≥', color: 'bg-red-200' },
];

export default function HomePage() {
  const { user } = useAuth();
  const router = useRouter();

  const [selectedGod, setSelectedGod] = useState<string | null>(null);
  const [isVIP, setIsVIP] = useState(false);

  useEffect(() => {
    const fetchUser = async () => {
      if (!user) return;
      const ref = doc(db, 'users', user.uid);
      const snap = await getDoc(ref);
      if (snap.exists()) {
        setSelectedGod(snap.data().selectedGod || null);
        setIsVIP(snap.data().isVIP || false);
      }
    };
    fetchUser();
  }, [user]);

  const handleSelectGod = async (godId: string) => {
    if (!user) {
      toast.error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô VIP
    if (!selectedGod || isVIP) {
      try {
        const ref = doc(db, 'users', user.uid);
        await setDoc(
          ref,
          { selectedGod: godId },
          { merge: true }
        );
        setSelectedGod(godId);
        router.push(`/fortune/deity/${godId}`);
      } catch (err) {
        console.error(err);
        toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
      }
    } else if (selectedGod && !isVIP && godId !== selectedGod) {
      // User ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°
      alert('‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏ü‡∏£‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1 ‡πÄ‡∏ó‡∏û ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÄ‡∏ó‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£ VIP');
    } else {
      router.push(`/fortune/deity/${godId}`);
    }
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-center font-bold mb-6">
        ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏ü‡∏£‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1 ‡πÄ‡∏ó‡∏û ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÄ‡∏ó‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£ VIP
      </h1>

      {/* User Zone */}
      <div className="grid grid-cols-2 gap-4 mb-10">
        {gods.map((god) => (
          <Button
            key={god.id}
            onClick={() => handleSelectGod(god.id)}
            className={`${god.color} p-6 text-lg font-bold`}
          >
            {god.name}
          </Button>
        ))}
      </div>

      {/* Admin Zone */}
      <h2 className="text-center font-bold mb-4">üîë Admin Zone</h2>
      <div className="grid grid-cols-2 gap-4">
        {gods.slice(0, 4).map((god) => (
          <Button
            key={god.id}
            onClick={() => router.push(`/admin/prediction/${god.id}`)}
            variant="outline"
            className="p-6"
          >
            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÄ‡∏•‡∏Ç {god.name}
          </Button>
        ))}
      </div>
    </div>
  );
}
